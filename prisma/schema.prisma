// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  createdAt DateTime  @default(now())
  passwordChanged DateTime?
  resetPasswordToken String?
  resetPasswordTokenExpire DateTime?
  role Role[]
  inquiry Inquiry[]
  usertype      UserType    // Remove default value here
}

enum UserType {
  Business
  Individual
}

model Inquiry {
id Int @id @default(autoincrement())
brand String
description String
supportStatus SupportStatus
user User @relation(fields: [userId], references: [id])
userId Int
estimatation Estimatation[]
}

enum SupportStatus {
  submitted
  lineUp
  Inprogress
  Completed
}

model Estimatation {
  id Int @id @default(autoincrement())
  description String
  price Int
  inquiryId Int
  inquiry Inquiry @relation(fields: [inquiryId], references: [id])
  estimatationStaus EstimatationStatus
}

enum EstimatationStatus {
  accept
  reject  
}


model Role {
id Int @id @default(autoincrement())
name String
createdAt DateTime
updatedAT DateTime
user User[]
permission RolePermission[]
}

model Permission {
  id Int @id @default(autoincrement())
  permission String @unique
  slug String @unique
  role RolePermission[]
}

model RolePermission{
  id Int @id @default(autoincrement())
  roleId Int
  role Role @relation(fields: [roleId], references: [id])
  permissionId Int
  permission Permission @relation(fields:[permissionId], references: [id])
}



model Inventory{
  id Int @id @default(autoincrement())
  name String
  price Int
  quantity Int
  stock String

}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
}

model Repair{
  id Int @id @default(autoincrement())
  productname String?
  price Int
  scheduledDate DateTime
  createdAt  DateTime @default(now())

}

